{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steve\\\\Desktop\\\\Code\\\\Level_2\\\\task12\\\\tetris\\\\react-teatris\\\\src\\\\Media\\\\Music.tsx\";\n// import \nimport React from 'react';\nimport { Component } from 'react'; // Define props for the Music Element Board\n\n// class component returns a HTML Audio Element which autoplays the Tetris theme song\nclass PlayMusic extends Component {\n  constructor(props) {\n    super(props);\n  } // render element renders the audio element if the pauseMusic prop from the Tetris component state is false. \n  // or returns an empty Div if the music is paused\n\n\n  render() {\n    if (!this.props.pauseMusic) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"audio\", {\n        autoPlay: true,\n        loop: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: \"https://ia800504.us.archive.org/33/items/TetrisThemeMusic/Tetris.mp3\",\n        type: \"audio/mpeg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), \"Your browser does not support the audio element.\"));\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" \");\n  }\n\n}\n\nexport default PlayMusic;","map":{"version":3,"sources":["C:/Users/steve/Desktop/Code/Level_2/task12/tetris/react-teatris/src/Media/Music.tsx"],"names":["React","Component","PlayMusic","constructor","props","render","pauseMusic"],"mappings":";AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CAIA;;AAKA;AACA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkD;AAC9CE,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AACH,GAH6C,CAIhD;AACE;;;AACAC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKD,KAAL,CAAWE,UAAhB,EACA;AACI,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ;AAAS,QAAA,QAAQ,MAAjB;AAAkB,QAAA,IAAI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAQ,QAAA,GAAG,EAAC,sEAAZ;AAAmF,QAAA,IAAI,EAAC,YAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,qDAFR,CADA;AAUH,KAZD,MAYS,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAR;AAER;;AArByC;;AAyBlD,eAAeJ,SAAf","sourcesContent":["// import \r\n\r\nimport React from 'react'\r\nimport { Component } from 'react'\r\n\r\n\r\n\r\n// Define props for the Music Element Board\r\ntype PlayMusicProps = {\r\n    pauseMusic: boolean\r\n}\r\n\r\n// class component returns a HTML Audio Element which autoplays the Tetris theme song\r\nclass PlayMusic extends Component<PlayMusicProps> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n  // render element renders the audio element if the pauseMusic prop from the Tetris component state is false. \r\n    // or returns an empty Div if the music is paused\r\n    render() {\r\n        if (!this.props.pauseMusic)\r\n        {\r\n            return (\r\n            <div>\r\n\r\n                    <audio   autoPlay loop>\r\n                \r\n                        <source src=\"https://ia800504.us.archive.org/33/items/TetrisThemeMusic/Tetris.mp3\" type=\"audio/mpeg\" /> \r\n                    Your browser does not support the audio element.\r\n                </audio>\r\n            </div>\r\n            )\r\n        }   else return (<div> </div>)  \r\n        \r\n        }\r\n    \r\n    }\r\n    \r\nexport default PlayMusic;"]},"metadata":{},"sourceType":"module"}