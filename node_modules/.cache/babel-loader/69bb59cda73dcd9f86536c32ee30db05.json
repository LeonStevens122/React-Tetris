{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steve\\\\Desktop\\\\Code\\\\Level_2\\\\task12\\\\tetris\\\\react-teatris\\\\src\\\\Media\\\\Music.tsx\";\nimport React from 'react';\nimport { createRef } from 'react'; //// react.d.ts\n//interface RefObject<T> {\n//    // immutable\n//    readonly current: T | null\n//}\n// react.d.ts\n//function createRef<T>(): RefObject<T>\n// Define props for the Music Element Board\n\nclass PlayMusic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.musicRef = createRef();\n  }\n\n  render() {\n    if (!this.props.pauseMusic) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"audio\", {\n        autoPlay: true,\n        loop: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"source\", {\n        src: \"https://ia800504.us.archive.org/33/items/TetrisThemeMusic/Tetris.mp3\",\n        type: \"audio/mpeg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), \"Your browser does not support the audio element.\"));\n    } else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" \");\n  }\n\n}\n\nexport default PlayMusic;","map":{"version":3,"sources":["C:/Users/steve/Desktop/Code/Level_2/task12/tetris/react-teatris/src/Media/Music.tsx"],"names":["React","createRef","PlayMusic","Component","constructor","props","musicRef","render","pauseMusic"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAoBC,SAApB,QAAqC,OAArC,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAMA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwD;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACpB,UAAMA,KAAN;AADoB,SAGhBC,QAHgB,GAGLL,SAAS,EAHJ;AAEvB;;AAEDM,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKF,KAAL,CAAWG,UAAhB,EACA;AACI,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ;AAAS,QAAA,QAAQ,MAAjB;AAAkB,QAAA,IAAI,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAQ,QAAA,GAAG,EAAC,sEAAZ;AAAmF,QAAA,IAAI,EAAC,YAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,qDAFR,CADA;AAUH,KAZD,MAYS,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAR;AAER;;AApB+C;;AAwBxD,eAAeN,SAAf","sourcesContent":["import React from 'react'\r\nimport { Component, createRef } from 'react'\r\n\r\n\r\n//// react.d.ts\r\n//interface RefObject<T> {\r\n//    // immutable\r\n//    readonly current: T | null\r\n//}\r\n\r\n// react.d.ts\r\n//function createRef<T>(): RefObject<T>\r\n\r\n// Define props for the Music Element Board\r\ntype PlayMusicProps = {\r\n    pauseMusic: boolean\r\n}\r\n\r\n\r\nclass PlayMusic extends React.Component<PlayMusicProps> {\r\n    constructor(props: any) {\r\n        super(props)\r\n    }\r\n    private musicRef = createRef<HTMLAudioElement>()\r\n    render() {\r\n        if (!this.props.pauseMusic)\r\n        {\r\n            return (\r\n            <div>\r\n\r\n                    <audio   autoPlay loop>\r\n                \r\n                        <source src=\"https://ia800504.us.archive.org/33/items/TetrisThemeMusic/Tetris.mp3\" type=\"audio/mpeg\" /> \r\n                    Your browser does not support the audio element.\r\n                </audio>\r\n            </div>\r\n            )\r\n        }   else return (<div> </div>)  \r\n        \r\n        }\r\n    \r\n    }\r\n    \r\nexport default PlayMusic;"]},"metadata":{},"sourceType":"module"}